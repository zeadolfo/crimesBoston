1/2500
x
pesos
peso
pesos <- c(4,6,5,7,3,6,5,4,6,7)
sum(pesos)
pesos <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos
f <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos <- 1/f
pesos
pesos[5]
pesos[7]
pesos[8]
pesos[9]
pesos[10]
19.25*runif(1)
27466/4
(27466/4)*runif(1)
(27466/4)*runif(1) + 6866.5
(27466/4)*runif(1) + 2*6866.5
(27466/4)*runif(1) + 3*6866.5
723+1263
723+1263+400
723+1263+400+27
q()
rm(list = ls())
x <- rbeta(10000000, 10,3)
summary(x)
hist(x)
x <- rbeta(1000, 10000,3)
hist(x)
var(x)
mean(x)
x <- rbeta(1000, 10000,30000)
hist(x)
summary(x)
install.packages("OpenNLP")
install.packages("openNLP")
library(openNLP)
q()
#Read the library I use in the analysis
library(data.table)
library(ggmap)
library(rjson)
library(purrr)
library(rgdal)
library(maptools)
library(sp)
library(rgdal)
library(maptools)
library(rgeos)
library(ggthemes)
library(jsonlite)
library(viridis)
library(scales)
library(geoR)
library(tmap)
library(lubridate)
library(geoRglm)
library(dplyr)
rm(list = ls())
#Read the data
setwd("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/")
load(".RData")
dados
dados <- fread("crime.csv")
mapa <- readOGR("Boston_Neighborhoods.geojson")
dados
conteo
crimes
crimes@coords
crimes@bbox
dados
tes
res
robbery
setwd("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/")
dados <- fread("crime.csv")
mapa <- readOGR("Boston_Neighborhoods.geojson")
dados[,.N, by = "STREET"]
dados[, .N, by = "MONTH"][order(MONTH)]
dados[, .N, by = "YEAR"][order(YEAR)]
dados[, .N, by = "DAY_OF_WEEK"][order(DAY_OF_WEEK)]
serie <- dados[, .N, by = c("MONTH", "YEAR")][order(YEAR, MONTH)]
plot(ts(serie[-c(1,40),]$N))
#Apparently in the winter the crimes get low than summer
dados[, .N, by = "OFFENSE_CODE_GROUP"]
#The database is quite clean but there some missing values and -1 values
dados[, .N, by = "Long"][order(Long, decreasing = T)]
dados <- dados[!is.na(Long)]
dados <- dados[Long != -1]
dados_crimenes <- dados[,.N, c("Location", "OFFENSE_CODE_GROUP")]
crimes <- SpatialPointsDataFrame(dados_crimenes$Location, data = dados_crimenes$OFFENSE_CODE_GROU)
#Count by some interesting variables
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados_tipo$Long, Lat = dados_tipo$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
dados_tipo <- data.table(dados_tipo, res)
dados_tipo
dados_tipo[,.N, by = c("Name", "OFFENSE_CODE_GROUP")]
dados_tipo[,.N, by = c("Name", "OFFENSE_CODE_GROUP")][order(N, decreasing = T)]
dados_tipo[,.N, by = c("Name", "OFFENSE_CODE_GROUP", "MONTH", "HOUR")][order(N, decreasing = T)]
dados_tipo
dados
res
conteo <- table(res$Name)
conteo
plot(mapa)
plot(crimes, add = T, col = blue)
plot(crimes, add = T, col = blue9)
plot(crimes, add = T, col = "blue9")
plot(crimes, add = T, col = "blue")
rs
res
conteo <- res[,.N, by = "Name"]
conteo <- data.table(res)[,.N, by = "Name"]
res
conteo <- merge(conteo, res, by = "Name", all.x = T, all.y = F)
conteo
res <- over(crimes, mapa)
conteo <- data.table(res)[,.N, by = "Name"]
conteo
data.table(res)[!is.na(Name),.N, by = "Name"]
conteo <- data.table(res)[!is.na(Name),.N, by = "Name"]
conteo <- merge(conteo, res, by = "Name", all.x = T, all.y = F)
conteo
conteo <- data.table(res)[!is.na(Name),.N, by = "Name"]
conteo
conteo <- merge(conteo, res, by = "Name", all.x = T, all.y = F)
conteo
conteo <- data.table(res)[!is.na(Name),.N, by = "Name"]
crimes
mapa
res
crimes
crimes@data
mapa@data
conteo <- merge(conteo, mapa@data, by = "Name", all.x = T, all.y = F)
conteo
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
homicidios <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Homicide"], coords.col = 1:2, data.col = 4)
res1.v <- variog(homicidios, trend = "1st")
res1.v
res1.v$direction
res1.v$u
homicidios
res1.v
?variog
plot(res1.v)
homicidios
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res <- data.table(res)[,.N, by = "Name"]
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
robbery <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Robbery"], coords.col = 1:2, data.col = 4)
plot(variog(robbery))
res1.v <- variog(robbery, trend = "1st")
plot(res1.v, type = "b")
res2.v <- variog(robbery, trend = "2nd")
lines(res2.v, type = "b", lty = 2)
res1.v
?variog
conteo
crimes <-  data.frame(Long = dados_tipo$Long, Lat = dados_tipo$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res
crimes
crimes@data
dados
crime
dados_crimenes
res <- over(crimes, mapa)
res <- over(dados_crimenes, mapa)
crimes
dados_crimenes[,1:2]
dados_crimenes <- SpatialPointsDataFrame(coords = dados_crimenes[,1], data = data.frame(conteo = dados_crimenes[,2]), proj4string = CRS(proj4string(mapa2)))
dados_crimenes <- SpatialPointsDataFrame(coords = dados_crimenes[,1], data = data.frame(conteo = dados_crimenes[,2]), proj4string = CRS(proj4string(mapa)))
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
conteo
res
dados_crimenes
dados_crimenes <- dados[,.N, c("Long", "Lat", "OFFENSE_CODE_GROUP")]
?SpatialPointsDataFrame
crimes <- SpatialPointsDataFrame(cbind(dados_crimenes$Long, dados_crimenes$Lat), data = dados_crimenes$OFFENSE_CODE_GROU)
crimes <- SpatialPointsDataFrame(data.frame(dados_crimenes$Long, dados_crimenes$Lat), data = dados_crimenes$OFFENSE_CODE_GROU)
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat), data = dados_crimenes$OFFENSE_CODE_GROU)
data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat)
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat), data = dados_crimenes$OFFENSE_CODE_GROU)
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(coord, data = dados_crimenes$OFFENSE_CODE_GROU)
coord
dados_crimenes$OFFENSE_CODE_GROU
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat), data = dados_crimenes$OFFENSE_CODE_GROU)
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat), data = data.frame(dados_crimenes)$OFFENSE_CODE_GROU)
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
dados_crimenes <- dados[,.N, c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_crimenes
?reshape
library(reshape2)
?tibble
?dcast
dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP)
dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = N)
dados_crimenes
dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
res <- over(crimes_reshape, mapa)
SpatialPointsDataFrame(coords = crimes_reshape, data = data.frame(id=1:dim(crimes_reshape)[1]), proj4string = CRS(proj4string(mapa2)))
#Count by some interesting variables
crimes_reshape <-
crimes_coors <- crimes_reshape[,1:2]
crimes_coors
crimes_reshape
dados_crimenes
crimes_reshape
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
crimes_coors <- crimes_reshape[,1:2]
crimes_reshape
crimes_reshape
crimes_data <- crimes_reshape[,3:69]
SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_data@data
res <- over(crimes_data, mapa)
crimes_data@data
crimes@data <- ifelse(is.na(crimes@data), 0, crimes@data)
crimes@data
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes_reshape, data = data.frame(id=1:dim(crimes_reshape)[1]), proj4string = CRS(proj4string(mapa2)))
crimes_data <- crimes_reshape[,3:69]
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes_reshape, data = data.frame(id=1:dim(crimes_reshape)[1]), proj4string = CRS(proj4string(mapa2)))
crimes@data <- ifelse(is.na(crimes@data), 0, crimes@data)
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_data@data
crimes_data@data <- ifelse(is.na(crimes_date@data), 0, crimes_data@data)
crimes_data@data <- ifelse(is.na(crimes_data@data), 0, crimes_data@data)
crimes_data@data
crimes_data <- crimes_reshape[,3:69]
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data
apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data
apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes <- SpatialPointsDataFrame(coords = crimes_reshape, data = data.frame(id=1:dim(crimes_reshape)[1]), proj4string = CRS(proj4string(mapa2)))
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = crimes_data)
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = data.frame(crimes_data))
plot(mapa)
plot(crimes, add = T, col = "blue")
res <- over(crimes_data, mapa)
res
res <- over(crimes_data, mapa)
crimes_data
res <- over(crimes_data, mapa)
mapa
crimes_data
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = data.frame(crimes_data), proj4string = CRS(proj4string(mapa2)))
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
plot(mapa)
plot(crimes, add = T, col = "blue")
res <- over(crimes_data, mapa)
res
crimes_data
crimes_data@data
res
cbind(res, crimes_data)
res
cbind(res, crimes_data@data)
res <- cbind(res, crimes_data@data)
library(doBy)
res
summaryBy(data = res, res[,8:74] ~ res[,1:7], FUN = sum)
esj <- summaryBy(data = res, res[,8:74] ~ res[,1:7], FUN = sum)
esj <- summaryBy(data = res, res[,8:74] ~ res[,1], FUN = sum)
rm(esj)
?summaryBy
esj <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
esj
esj[12,]
comp_prin <- princomp(esj[,-1], 5)
esj[,-1]
comp_prin <- princomp(esj[,-1])
comp_prin <- kmeans(esj[,-1], k = 10)
clusteres <- kmeans(esj[,-1], centers = 10)
clusteres
clusteres <- kmeans(esj[,-1], centers = 8)
clusteres
clusteres <- kmeans(esj[,-1], centers = 5)
clusteres
clusteres <- kmeans(esj[,-1], centers = 4)
clusteres
clusteres <- kmeans(esj[,-1], centers = 3)
clusteres
clusteres <- kmeans(esj[,-1], centers = 5)
clusteres
clusteres <- kmeans(esj[,-1], centers = 3)
clusteres
clusteres <- kmeans(esj[,-1], centers = 4)
clusteres
clusteres <- kmeans(esj[,-1], centers = 5)
clusteres
clusteres <- kmeans(esj[,-1], centers = 2)
clusteres
clusteres <- kmeans(esj[,-1], centers = 3)
clusteres
clusteres <- hclust(esj[,-1])
library(cluster)
crimes_dist <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
clusteres <- hclust(crimes_dist[,-1])
crimes_dist[,-1]
cor(crimes_dist[,-1])
mat_cor <- cor(crimes_dist[,-1])
library(corplot)
install.packages("corplot")
install.packages("corrplot")
library(corrplot)
mat_cor <- rquery.cormat(crimes_dist[,-1], type="full", col=col)
source("http://www.sthda.com/upload/rquery_cormat.r")
mat_cor <- rquery.cormat(crimes_dist[,-1], type="full", col=col)
mat_cor <- rquery.cormat(crimes_dist[-12,-1], type="full", col=col)
mat_cor <- cor(crimes_dist[,-1])
mat_cor
mat_cor
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
mat_cor
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr)
ggcorrplot(mat_cor)
mat_cor
names(mat_cor)
rownames(mat_cor)
nomes <- rownames(mat_cor)
rownames(mat_cor) <- 1:67
colnames(mat_cor)
colnames(mat_cor) <- 1:67
corrplot(mat_cor)
rownames(mat_cor) <- nomes
colnames(mat_cor) <- nomes
res
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
comp_prin <- princomp(crimes_dist[,-1])
?princomp
comp_prin <- prcomp(crimes_dist[,-1])
comp_prin
summary(comp_prin)
ola <- apply(crimes_dist[,-1], 2, f <- function(x){(x - min(x))/(max(x)-min(x))})
ola
comp_prin <- prcomp(ola)
summary(comp_prin)
comp_prin$x
dim(comp_prin$x)
crimes_dist[,-1]
comp_prin <- prcomp(ola)
summary(comp_prin)
q()

1/2500
x
pesos
peso
pesos <- c(4,6,5,7,3,6,5,4,6,7)
sum(pesos)
pesos <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos
f <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos <- 1/f
pesos
pesos[5]
pesos[7]
pesos[8]
pesos[9]
pesos[10]
19.25*runif(1)
27466/4
(27466/4)*runif(1)
(27466/4)*runif(1) + 6866.5
(27466/4)*runif(1) + 2*6866.5
(27466/4)*runif(1) + 3*6866.5
723+1263
723+1263+400
723+1263+400+27
q()
rm(list = ls())
x <- rbeta(10000000, 10,3)
summary(x)
hist(x)
x <- rbeta(1000, 10000,3)
hist(x)
var(x)
mean(x)
x <- rbeta(1000, 10000,30000)
hist(x)
summary(x)
install.packages("OpenNLP")
install.packages("openNLP")
library(openNLP)
q()
library(data.table)
library(ggmap)
library(rjson)
library(purrr)
library(rgdal)
library(maptools)
library(sp)
library(rgdal)
library(maptools)
library(rgeos)
library(ggthemes)
library(jsonlite)
library(viridis)
library(scales)
library(geoR)
library(tmap)
library(lubridate)
library(geoRglm)
library(dplyr)
library(doBy)
library(cluster)
library(ggcorrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
rm(list = ls())
#Read the data
setwd("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/")
dados <- fread("crime.csv")
mapa <- readOGR("Boston_Neighborhoods.geojson")
pobreza <- fread("pobreza_Boston.csv")
pobreza
pobreza <- pobreza[1:24]
pobreza
pobreza <- fread("pobreza_Boston.csv", header = T)
pobreza <- pobreza[1:24]
pobreza
pobreza <- pobreza[1:23]
pobreza
str(pobreza)
pobraza[,2]
pobraza[,2]
pobreza[,2]
as.numeric(pobreza[,2])
as.numeric(pobreza[,2])
as.numeric(pobreza[,3])
pobreza
pobreza <- fread("pobreza_Boston.csv", header = T, dec = ",")
pobreza <- pobreza
pobreza
pobreza <- pobreza[-24,]
pobreza
mapa@data
q()
#Read the library I use in the analysis
library(data.table)
library(ggmap)
library(rjson)
library(purrr)
library(rgdal)
library(maptools)
library(sp)
library(rgdal)
library(maptools)
library(rgeos)
library(ggthemes)
library(jsonlite)
library(viridis)
library(scales)
library(geoR)
library(tmap)
library(lubridate)
library(geoRglm)
library(dplyr)
library(doBy)
library(cluster)
library(ggcorrplot)
source("http://www.sthda.com/upload/rquery_cormat.r")
rm(list = ls())
#Read the data
setwd("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/")
dados <- fread("crime.csv")
mapa <- readOGR("City_of_Boston_Boundary.shp", layer = "SHAPEFILE")
mapa <- readShapePoly("City_of_Boston_Boundary.shp", layer = "SHAPEFILE")
mapa <- readShapePoly("City_of_Boston_Boundary.shp")
crswgs84=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
mapa <- readShapePoly("City_of_Boston_Boundary.shp",proj4string=crswgs84,verbose=TRUE))
mapa <- readShapePoly("City_of_Boston_Boundary.shp",proj4string=crswgs84,verbose=TRUE)
mapa <- readOGR("City_of_Boston_Boundary.shp",proj4string=crswgs84,verbose=TRUE)
mapa <- readOGR("City_of_Boston_Boundary.shp",verbose=TRUE)
mapa <- readOGR("City_of_Boston_Boundary.shp")
?readOGR
mapa <- readOGR(dsn = "City_of_Boston_Boundary.shp")
mapa <- readOGR(dsn = "City_of_Boston_Boundary-shp.zip")
mapa <- readOGR("City_of_Boston_Boundary.shp")
ogrDrivers()
dsn <- system.file("vectors", package = "rgdal")[1]
ogrListLayers(dsn)
ogrInfo(dsn)
ogrInfo(dsn=dsn, layer="cities")
mapa <- readOGR("City_of_Boston_Boundary.shp")
mapa <- readOGR("City_of_Boston_Boundary.shp")
mapa <- readOGR("City_of_Boston_Boundary.shp", layer = "shapefile")
mapa <- readOGR(".", layer = "shapefile")
mapa <- readOGR(".", "shapefile")
mapa <- readOGR(".")
mapa <- readOGR(".", layer = "City_of_Boston_Boundary.shp")
mapa <- readOGR("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/", layer = "City_of_Boston_Boundary.shp")
dir()
mapa <- readOGR("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/City_of_Boston_Boundary-shp/", layer = "City_of_Boston_Boundary")
ampa
plot(mapa)
mapa@polygons
mapa@data
mapa <- readOGR("Boston_Neighborhoods.geojson")
plot(mapa)
pobreza <- fread("pobreza_Boston.csv", header = T)
pobreza
pobreza <- pobreza[-24]
pobreza
pobreza <- fread("pobreza_Boston.csv", header = T, dec = ",")
pobreza <- pobreza[-24]
pobreza
mapa@data
mapa@data$Name
pobreza <- fread("pobreza_Boston.csv", header = T, dec = ",")
pobreza$District
pobreza <- pobreza[-24]
pobraza
pobreza
pobreza$District
mapa@data$Name
sort(mapa@data$Name)
sort(pobreza$District)
library(gstat)
install.packages("gstat")
library(gstat)
serie <- dados[, .N, by = c("MONTH", "YEAR")][order(YEAR, MONTH)]
plot(ts(serie[-c(1,40),]$N))
#Apparently in the winter the crimes get low than summer
dados[, .N, by = "OFFENSE_CODE_GROUP"]
#The database is quite clean but there some missing values and -1 values
dados[, .N, by = "Long"][order(Long, decreasing = T)]
dados <- dados[!is.na(Long)]
dados <- dados[Long != -1]
dados_crimenes <- dados[,.N, c("Long", "Lat", "OFFENSE_CODE_GROUP")]
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = data.frame(crimes_data), proj4string = CRS(proj4string(mapa2)))
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
plot(mapa)
plot(crimes, add = T, col = "blue")
res <- over(crimes_data, mapa)
res <- cbind(res, crimes_data@data)
crimes_dist <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
crimes_dist <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
mat_cor
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
crimes_dist <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
res <- over(crimes_data, mapa)
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = data.frame(crimes_data), proj4string = CRS(proj4string(mapa2)))
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
dados_crimenes <- dados[,.N, c("Long", "Lat", "OFFENSE_CODE_GROUP")]
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
dados_crimenes <- dados[,.N, c("Long", "Lat", "OFFENSE_CODE_GROUP")]
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
coord <- SpatialPoints(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes <- SpatialPointsDataFrame(data.frame(Long = dados_crimenes$Long, Lat = dados_crimenes$Lat))
crimes_reshape <- dcast(data = dados_crimenes, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = "N")
##Which kind of crime is more common in each distric?
crimes_coors <- crimes_reshape[,1:2]
crimes_data <- crimes_reshape[,3:69]
crimes_data <- apply(crimes_data, 2, f <- function(x) ifelse(is.na(x), 0 , x))
crimes_data <- SpatialPointsDataFrame(crimes_coors, data = data.frame(crimes_data), proj4string = CRS(proj4string(mapa2)))
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados$Long, Lat = dados$Lat)
plot(mapa)
plot(crimes, add = T, col = "blue")
res <- over(crimes_data, mapa)
res <- cbind(res, crimes_data@data)
crimes_dist <- summaryBy(data = res, res[,8:74] ~ Name, FUN = sum)
mat_cor <- cor(crimes_dist[,-1], method = "spearman")
mat_cor
ola <- apply(crimes_dist[,-1], 2, f <- function(x){(x - min(x))/(max(x)-min(x))})
comp_prin <- prcomp(ola)
summary(comp_prin)
conteo <- data.table(res)[!is.na(Name),.N, by = "Name"]
conteo
res <- over(crimes_data, mapa)
dados[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
homicidios <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Homicide"], coords.col = 1:2, data.col = 4)
res1.v <- variog(homicidios, trend = "1st")
plot(res1.v, type = "b")
variogram(homicidios, trend = "1st")
homicidios
homicidios$coords
homicidios$coords
res1.v <- variogram(homicidios, locations = homicidios$coords, trend = "1st")
?variogram
# homicidios <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Homicide"], coords.col = 1:2, data.col = 4)
homicios <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]
# homicidios <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Homicide"], coords.col = 1:2, data.col = 4)
homicidios <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]
homicidios
mapa
mapa@data
mapa2
mapa2@data
meuse
data(meuse)
meuse
res
rm(homicios)
crimes_data
crimes_data
crimes_data@data
dados[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
dados_tipo
cries
crimes
crimes@data
res <- over(crimes, mapa)
res
res <- over(crimes, mapa2)
res
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
mapa2@data
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
dados_tipo
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N]
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N]
dados_tipo
res <- over(crimes, mapa2)
res
dados_tipo
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res <- data.table(res)[,.N, by = "Name"]
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
robbery <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Robbery"], coords.col = 1:2, data.col = 4)
mapa2@data
merge(mapa2@data, pobreza, all.x = T, all.y = F)
mapa2@data
merge(mapa2@data, pobreza, all.x = F, all.y = F)
merge(mapa2@data, pobreza, all.x = T, all.y = F, by.x = "Name", by.y = "District")
res <- data.table(res)[,.N, by = "Name"]
res
mapa2@data <- merge(mapa2@data, pobreza, all.x = T, all.y = F, by.x = "Name", by.y = "District")
cor(mapa2@data$N, mapa2@data$pobreza)
?cor
cor(mapa2@data$N, mapa2@data$pobreza, use = "complete.obs")
mapa2@data$pobreza
cor(mapa2@data$N, mapa2@data$pobreza_total, use = "complete.obs")
mapa2@data$pobreza_total
cor(mapa2@data$N, mapa2@data$Impoverished, use = "complete.obs")
mapa2@data$Impoverished
cor(mapa2@data$N, mapa2@data$Impoverished, use = "complete.obs")
cor(mapa2@data$N, mapa2@data$pobreza, use = "complete.obs")
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]
robbery
variogram(robbery, locations = robbery[1:2])
variogram(robbery$N ~ 1, locations = robbery[1:2])
variogram(data = robbery, N ~ 1, locations = robbery[1:2])
typeof(robbery)
variogram(data = data.table(robbery), N ~ 1, locations = robbery[1:2])
robbery
variogram(data = data.frame(robbery), N ~ 1, locations = robbery[1:2])
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery",]
variogram(data = data.frame(robbery), N ~ 1, locations = robbery[1:2])
variogram(data = data.frame(robbery), N ~ 1, locations = coordinates(robbery[1:2]))
variogram(data = robbery, N ~ 1, locations = coordinates(robbery[1:2]))
meuse
coordinates(robbery) ~ Long + Lat
variogram(data = robbery, N ~ 1)
robbery
robbery
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery",]
str(robbery)
coordinates(robbery) ~ Long + Lat
variogram(data = robbery, N ~ 1)
variogram(N ~ Long + Lat, robbery)
variogram(N ~ Long + Lat, data = robbery)
coordinates(robbery) <- ~ Long + Lat
variogram(N ~ Long + Lat, data = robbery)
res1 <- variogram(N ~ Long + Lat, data = robbery)
plot(res1)
plot(variog(robbery))
res1$dist
res1$dist
variogram
?variogram
modelo <- fit.variogram(res1, vgm(1, "Sph", 700, 1))
?fit.variogram
modelo <- fit.variogram(res1, vgm("Sph"))
modelo <- fit.variogram(res1, vgm("Mat"))
?vgm
modelo <- fit.variogram(res1, vgm("Exp"), )
res1 <- variogram(N ~ Long + Lat, data = robbery)
plot(res1)
modelo <- fit.variogram(res1, vgm("Exp", nugget = 2.6), )
modelo <- fit.variogram(res1, vgm("Exp", nugget = 2.6))
modelo <- fit.variogram(res1, vgm("Mat", nugget = 2.6))
modelo <- fit.variogram(res1, vgm("Gau", nugget = 2.6))
res1
robbery
roberry@data
robbery@data
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery",]
robbery
coordinates(robbery) <- ~ Long + Lat
res1 <- variogram(N ~ 1, data = robbery)
plot(res1)
modelo <- fit.variogram(res1, vgm("Gau", nugget = 2.6))
?fit.variogram.reml
?vgm
modelo <- fit.variogram(res1, vgm("Gau", nugget = 2.6))
vgmArea(meuse[1:5,], vgm = vgm(1, "Exp", 1000)) # point-point
vgmArea(meuse[1:5,], meuse.area, vgm = vgm(1, "Exp", 1000))
meuse
vgmArea(meuse[1:2,], vgm = vgm(1, "Exp", 1000)) # point-point
vgmArea(meuse[1:2,], meuse.area, vgm = vgm(1, "Exp", 1000))
library(sp)
demo(meuse, ask = FALSE, echo = FALSE)
vgmArea(meuse[1:5,], vgm = vgm(1, "Exp", 1000)) # point-point
vgmArea(meuse[1:5,], meuse.area, vgm = vgm(1, "Exp", 1000)) # point-area
library(sp)
demo(meuse, ask = FALSE, echo = FALSE)
vgmArea(meuse[1:2,], vgm = vgm(1, "Exp", 1000)) # point-point
vgmArea(meuse[1:2,], meuse.area, vgm = vgm(1, "Exp", 1000)) # point-area
vgmArea(res1[1:2,], vgm = vgm(1, "Exp", 1000))
res1
vgmArea(robbery[1:2,], vgm = vgm(1, "Exp", 1000))
vgmArea(robbery[1:5,], vgm = vgm(1, "Exp", 1000))
vgmArea(robbery[1:3,], vgm = vgm(1, "Exp", 1000))
vgmArea(robbery[1:2,], vgm = vgm(1, "Exp", 1000))
vgmPoint(robbery[1:2,], vgm = vgm(1, "Exp", 1000))
meuse.area
robbery.are
meuse
meuse.area
coordinates(robbery) <- ~ Long + Lat
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery",]
robbery
coordinates(robbery) <- ~ Long + Lat
robbery
robbery@data
mapa2@data
mapa2@data
res1 <- variogram(N ~ pobreza, data = mapa2)
res1 <- variogram(N ~ pobreza, locations = mapa2@coords,  data = mapa2)
res1 <- variogram(N ~ pobreza, locations = locations,  data = mapa2)
mapa2@proj4string
mapa2@plotOrder
mapa2@polygons
res1 <- variogram(N ~ pobrezadata = mapa2)
res1 <- variogram(N ~ pobreza,data = mapa2)
meuse
meuse@coords.nrs
meuse@coords
robbery <- dados_tipo[OFFENSE_CODE_GROUP == "Robbery",]
coordinates(mapa2) <- ~ robbery$Long + robbery$Lat
?SpatialPointsDataFrame
q()

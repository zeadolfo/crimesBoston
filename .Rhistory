1/2500
x
pesos
peso
pesos <- c(4,6,5,7,3,6,5,4,6,7)
sum(pesos)
pesos <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos
f <- c(4,6,5,7,3,6,5,4,6,7)/10000
pesos <- 1/f
pesos
pesos[5]
pesos[7]
pesos[8]
pesos[9]
pesos[10]
19.25*runif(1)
27466/4
(27466/4)*runif(1)
(27466/4)*runif(1) + 6866.5
(27466/4)*runif(1) + 2*6866.5
(27466/4)*runif(1) + 3*6866.5
723+1263
723+1263+400
723+1263+400+27
q()
rm(list = ls())
x <- rbeta(10000000, 10,3)
summary(x)
hist(x)
x <- rbeta(1000, 10000,3)
hist(x)
var(x)
mean(x)
x <- rbeta(1000, 10000,30000)
hist(x)
summary(x)
install.packages("OpenNLP")
install.packages("openNLP")
library(openNLP)
q()
library(data.table)
library(ggmap)
library(rjson)
library(purrr)
library(rgdal)
library(maptools)
library(sp)
library(rgdal)
library(maptools)
library(rgeos)
library(ggthemes)
library(jsonlite)
library(viridis)
library(scales)
library(geoR)
library(tmap)
library(lubridate)
library(geoRglm)
rm(list = ls())
setwd("/home/ze/Área de Trabalho/Bases de dados/Crimes Boston/crimesBoston/")
dados <- fread("crime.csv")
mapa <- readOGR("Boston_Neighborhoods.geojson")
dados <- dados[!is.na(Long)]
dados <- dados[Long != -1]
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res <- data.table(res)[,.N, by = "Name"]
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
robbery <- as.geodata(dados_mes[OFFENSE_CODE_GROUP == "Robbery" & 1:100], coords.col = 1:2, data.col = 5, covar.col = 3)
robbery <- as.geodata(dados_mes[OFFENSE_CODE_GROUP == "Robbery" & c(1:100)], coords.col = 1:2, data.col = 5, covar.col = 3)
dados_mes[OFFENSE_CODE_GROUP == "Robbery"][c(1:100)]
robbery <- as.geodata(dados_mes[OFFENSE_CODE_GROUP == "Robbery"][c(1:100)], coords.col = 1:2, data.col = 5, covar.col = 3)
plot(variog(robbery))
res1.v <- variog(robbery, trend = "1st")
plot(res1.v, type = "b")
res2.v <- variog(robbery, trend = "2nd")
lines(res2.v, type = "b", lty = 2)
modelo1 <- likfit(robbery, trend = ~factor(MONTH), ini.cov.pars = c(1,1))
modelo2 <- likfit(robbery, trend = "1st", ini.cov.pars = c(1,1),cov.model = "matern", kappa = 1.5)
modelo2 <- likfit(robbery, trend = "1st", ini.cov.pars = c(1,1),cov.model = "matern", kappa = 1.5)
dados_mes[OFFENSE_CODE_GROUP == "Robbery"]
robbery <- as.geodata(dados_mes[OFFENSE_CODE_GROUP == "Robbery"][c(1:500)], coords.col = 1:2, data.col = 5, covar.col = 3)
plot(variog(robbery))
res1.v <- variog(robbery, trend = "1st")
plot(res1.v, type = "b")
res2.v <- variog(robbery, trend = "2nd")
lines(res2.v, type = "b", lty = 2)
modelo1 <- likfit(robbery, trend = ~factor(MONTH), ini.cov.pars = c(1,1))
mc1 <- variog.mc.env(car_lacerny, obj = res1.v)
mc1 <- variog.mc.env(robbery, obj = res1.v)
plot(res1.v, env = mc1, xlab = "u")
mc2 <- variog.mc.env(robbery, obj = res2.v)
plot(res2.v, env = mc2, xlab = "u")
modelo2 <- likfit(robbery, trend = "1st", ini.cov.pars = c(1,1),cov.model = "matern", kappa = 1.5)
modelo1 <- likfit(robbery, trend = ~factor(MONTH), ini.cov.pars = c(1,1),cov.model = "matern", kappa = 1.5)
dados_tipo[OFFENSE_CODE_GROUP == "Robbery"]
robbery <- as.geodata(dados_tipo[OFFENSE_CODE_GROUP == "Robbery"], coords.col = 1:2, data.col = 4)
plot(variog(robbery))
res1.v <- variog(robbery, trend = "1st")
plot(res1.v, type = "b")
res2.v <- variog(robbery, trend = "2nd")
lines(res2.v, type = "b", lty = 2)
mc1 <- variog.mc.env(robbery, obj = res1.v)
plot(res1.v, env = mc1, xlab = "u")
modelo2 <- likfit(robbery, trend = "1st", ini.cov.pars = c(1,1),cov.model = "matern", kappa = 1.5)
locales <- robbery$coords
lines(res2.v, type = "b", lty = 2)
plot(res1.v, type = "b")
lines(res2.v, type = "b", lty = 2)
dados_mes[OFFENSE_CODE_GROUP == "Robbery"]
dados_mes[OFFENSE_CODE_GROUP == "Robbery", .N, by = "MONTH"]
dados_mes[OFFENSE_CODE_GROUP == "Robbery", .N, by = c("Long", "Lat", "MONTH")]
dados_mes[OFFENSE_CODE_GROUP == "Robbery", .N, by = c("Long", "Lat", "MONTH")][N > 1,.N]
dados_mes[OFFENSE_CODE_GROUP == "Robbery", .N, by = c("Long", "Lat", "MONTH")][N == 1,.N]
#First analysis about homicides
dados[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
library(dplyr)
#First analysis about homicides
dados[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
dados_tipo
?dcast.data.table
dcast.data.table(data = dados_tipo, Long + Lat ~ OFFENSE_CODE_GROUP, value.var = N)
dcast.data.table(data = dados_tipo, Long + Lat ~ OFFENSE_CODE_GROUP)
crimes <-  data.frame(Long = dados_tipo$Long, Lat = dados_tipo$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res
res
dados_tipo
res
data.table(dados_tipo, res)
dados_tipo <- data.table(dados_tipo, res)
dados
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
res <- data.table(res)[,.N, by = "Name"]
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
plot(crimes, add = T, col = "blue")
plot(mapa)
plot(crimes, add = T, col = "blue")
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
dados <- data.table(dados)[,.N, by = "Name"]
dados
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
dados <- data.table(dados)[,.N, by = "Name"]
dados
crimes
crimes@data
res
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
plot(mapa)
plot(crimes, add = T, col = "blue")
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
dados_tipo
dados_tipo[,.N, by = "Name"]
crimes
crimes@coords
crimes
mapa2@data
dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide",]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Long == "-71.03790 ",]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Long == "-71.03790",]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Long == -71.03790,]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" | Long == -71.03790,]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Long == -71.03790,]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide",]
mapa2
mapa2@data <- merge(mapa2@data, res, by = "Name", all.x = T, all.y = F)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
crimes
conteo <- dados_tipo[,.N, by = "Name"]
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
conteo
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
#Count by some interesting variables
dados_tipo <- dados[,.N, by = c("Long", "Lat", "OFFENSE_CODE_GROUP")]
dados_mes <- dados[,.N, by = c("Long", "Lat", "MONTH", "OFFENSE_CODE_GROUP")]
dados_tipo[,N := as.numeric(N)]
dados_mes[,N := as.numeric(N)]
crimes <-  data.frame(Long = dados_tipo$Long, Lat = dados_tipo$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
res <- over(crimes, mapa)
dados_tipo <- data.table(dados_tipo, res)
dados_tipo
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
dados[OFFENSE_CODE_GROUP == "Homicide" & (YEAR %in% c(2016, 2017)), .N, by = "MONTH"] %>% group_by(MONTH) %>% summarize(n = sum(N)) %>% mutate(prop = n/sum(n))
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <-  data.frame(Long = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados_tipo[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPointsDataFrame(coords = crimes, data = data.frame(id=1:dim(crimes)[1]), proj4string = CRS(proj4string(mapa2)))
crimes
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
conteo
crimes
crimes@data
mapa2 <- SpatialPolygonsDataFrame(mapa, data = data.frame(mapa@data))
mapa2@data
mapa2@data <- merge(mapa2@data, conteo, by = "Name", all.x = T, all.y = F)
mapa2@data
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
mapa2@data$N <- ifelse(is.na(mapa2@data$N) , 0, mapa2@data$N)
tm_shape(mapa2) + tm_fill(col = "N") + tm_borders()
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
mapa2@data
dados_tipo
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
conteo
dados_tipo
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
conteo
conteo <- dados_tipo[OFFENSE_CODE_GROUP == "Homicide",.N, by = "Name"]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Name = "Dorchester"]
dados_tipo[OFFENSE_CODE_GROUP == "Homicide" & Name == "Dorchester"]
crimes
crimes@coords
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide" & MONTH == 6]$Lat)
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
crimes <-  data.frame(Long = dados[OFFENSE_CODE_GROUP == "Homicide"]$Long, Lat = dados[OFFENSE_CODE_GROUP == "Homicide"]$Lat)
crimes <- SpatialPoints(crimes)
plot(mapa)
plot(crimes, add = T, col = "blue")
crimes
crimes@coords
q()
